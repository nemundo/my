<?php

namespace Nemundo\Package\OpenGraph;

use Nemundo\Html\Header\AbstractHeaderHtmlContainer;
use Nemundo\Html\Header\Meta\Meta;
use Nemundo\Web\ResponseConfig;


abstract class AbstractOpenGraph extends AbstractHeaderHtmlContainer
{

    /**
     * @var string
     */
    public $title;

    /**
     * @var string
     */
    public $siteName;

    /**
     * @var string
     */
    public $description;

    /**
     * @var string
     */
    public $imageUrl;

    protected $prefix;


    protected function loadContainer()
    {
        parent::loadContainer(); // TODO: Change the autogenerated stub

        $this->title=   ResponseConfig::$title;
        $this->description=   ResponseConfig::$description;
        $this->imageUrl=ResponseConfig::$imageUrl;

    }


    public function getContent()
    {






        /*
        if ($this->title !== null) {
            $meta = new OpenGraphMeta($this);
            $meta->property = 'og:title';
            $meta->content = $this->title;
        }

        if ($this->siteName !== null) {
            $meta = new OpenGraphMeta($this);
            $meta->property = 'og:site_name';
            $meta->content = $this->siteName;
        }

        if ($this->description !== null) {
            $meta = new OpenGraphMeta($this);
            $meta->property = 'description';
            $meta->content = $this->description;
        }

        if ($this->imageUrl !== null) {
            $meta = new OpenGraphMeta($this);
            $meta->property = 'image';
            $meta->content = $this->imageUrl;
        }*/

        return parent::getContent();

    }


    protected function addMeta($property, $content)
    {

        //      $this->addAttribute('property', 'og:'.$this->property);
//        $this->addAttribute('content', $this->content);


        if ($content !==null) {
        $meta = new Meta($this);
        $meta->addAttribute('property', $this->prefix . ':' . $property);
        $meta->addAttribute('content', $content);
        }

    }


}