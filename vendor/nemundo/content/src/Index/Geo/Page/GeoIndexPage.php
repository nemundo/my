<?php


namespace Nemundo\Content\Index\Geo\Page;


use Nemundo\Admin\Com\Button\AdminIconSiteButton;
use Nemundo\Admin\Com\Table\AdminClickableTable;
use Nemundo\App\Application\Com\ApplicationListBox;
use Nemundo\Com\FormBuilder\SearchForm;
use Nemundo\Com\TableBuilder\TableHeader;
use Nemundo\Com\Template\AbstractTemplateDocument;
use Nemundo\Content\Admin\Template\ContentTemplate;
use Nemundo\Content\Com\ListBox\ContentTypeListBox;
use Nemundo\Content\Index\Geo\Data\GeoIndex\GeoIndexPaginationReader;
use Nemundo\Content\Index\Geo\Site\Kml\GeoIndexKmlSite;
use Nemundo\Content\Parameter\ContentTypeParameter;
use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;
use Nemundo\Package\Bootstrap\Layout\BootstrapTwoColumnLayout;
use Nemundo\Package\Bootstrap\Pagination\BootstrapPagination;
use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;

class GeoIndexPage extends ContentTemplate
{

    public function getContent()
    {


        // Container


        $form=new SearchForm($this);

        $formRow = new BootstrapRow($form);

        $application=new ApplicationListBox($formRow);
        $application->submitOnChange = true;
        $application->searchMode = true;

        $listbox = new ContentTypeListBox($formRow);
        $listbox->submitOnChange = true;
        $listbox->searchMode = true;




        $btn=new AdminIconSiteButton($this);
        $btn->site=GeoIndexKmlSite::$site;



        $layout=new BootstrapTwoColumnLayout($this);


        $table = new AdminClickableTable($layout->col1);

        $header = new TableHeader($table);
        $header->addText('Content Type');
        $header->addText('Place');
        $header->addText('Coordinate');


        //$externalModel = new ContentModel();
        //$externalModel->loadContentType();

        $geoReader = new GeoIndexPaginationReader();
        $geoReader->model->loadContent();
        $geoReader->model->content->loadContentType();

        $contentTypeParameter = new ContentTypeParameter();
        $contentTypeParameter->contentTypeCheck = false;
        if ($contentTypeParameter->hasValue()) {

            $geoReader->filter->andEqual($geoReader->model->content->contentTypeId, $contentTypeParameter->getValue());
        }

        $geoReader->addOrder($geoReader->model->place);

        foreach ($geoReader->getData() as $geoRow) {

            $row = new BootstrapClickableTableRow($table);

            $row->addText($geoRow->content->contentType->contentType);
            $row->addText($geoRow->place);
            $row->addText($geoRow->coordinate->getText());


            $contentType = $geoRow->content->getContentType();

            $row->addClickableSite($contentType->getViewSite());

            //$row->addText($geoRow->getModelValue($externalModel->contentType->contentType));

        }

        $pagination=new BootstrapPagination($this);
        $pagination->paginationReader = $geoReader;


        return parent::getContent(); // TODO: Change the autogenerated stub
    }

}